Memory growth is now the same across all 8 available GPUs.
Loading data...
Video 0 ...
Video 50 ...
Video 100 ...
Video 150 ...
Video 200 ...
Video 250 ...
Video 300 ...
Video 350 ...
Done loading videos in 56.80920672416687 seconds.
Splitting videos into train, val, and test...
2022-08-07 01:06:40.119286: I tensorflow/core/platform/cpu_feature_guard.cc:152] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  SSE3 SSE4.1 SSE4.2 AVX
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2022-08-07 01:06:46.577457: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1525] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 14649 MB memory:  -> device: 0, name: Tesla V100-SXM2-16GB-N, pci bus id: 0000:06:00.0, compute capability: 7.0
2022-08-07 01:06:46.579993: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1525] Created device /job:localhost/replica:0/task:0/device:GPU:1 with 14649 MB memory:  -> device: 1, name: Tesla V100-SXM2-16GB-N, pci bus id: 0000:07:00.0, compute capability: 7.0
2022-08-07 01:06:46.582333: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1525] Created device /job:localhost/replica:0/task:0/device:GPU:2 with 14649 MB memory:  -> device: 2, name: Tesla V100-SXM2-16GB-N, pci bus id: 0000:0a:00.0, compute capability: 7.0
2022-08-07 01:06:46.584708: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1525] Created device /job:localhost/replica:0/task:0/device:GPU:3 with 14649 MB memory:  -> device: 3, name: Tesla V100-SXM2-16GB-N, pci bus id: 0000:0b:00.0, compute capability: 7.0
2022-08-07 01:06:46.587026: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1525] Created device /job:localhost/replica:0/task:0/device:GPU:4 with 14649 MB memory:  -> device: 4, name: Tesla V100-SXM2-16GB-N, pci bus id: 0000:85:00.0, compute capability: 7.0
2022-08-07 01:06:46.589377: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1525] Created device /job:localhost/replica:0/task:0/device:GPU:5 with 14649 MB memory:  -> device: 5, name: Tesla V100-SXM2-16GB-N, pci bus id: 0000:86:00.0, compute capability: 7.0
2022-08-07 01:06:46.591697: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1525] Created device /job:localhost/replica:0/task:0/device:GPU:6 with 14649 MB memory:  -> device: 6, name: Tesla V100-SXM2-16GB-N, pci bus id: 0000:89:00.0, compute capability: 7.0
2022-08-07 01:06:46.593991: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1525] Created device /job:localhost/replica:0/task:0/device:GPU:7 with 14649 MB memory:  -> device: 7, name: Tesla V100-SXM2-16GB-N, pci bus id: 0000:8a:00.0, compute capability: 7.0
Done splitting.
Setting TensorFlow Mirrored Strategy with 2 GPUs...
Number of devices in strategy: 2
Creating TF Dataset...
Creating TF DISTRIBUTED Dataset...
2022-08-07 01:07:02.487939: W tensorflow/core/grappler/optimizers/data/auto_shard.cc:776] AUTO sharding policy will apply DATA sharding policy as it failed to apply FILE sharding policy because of the following reason: Found an unshardable source dataset: name: "TensorSliceDataset/_2"
op: "TensorSliceDataset"
input: "Placeholder/_0"
input: "Placeholder/_1"
attr {
  key: "Toutput_types"
  value {
    list {
      type: DT_UINT8
      type: DT_UINT8
    }
  }
}
attr {
  key: "_cardinality"
  value {
    i: 232
  }
}
attr {
  key: "is_files"
  value {
    b: false
  }
}
attr {
  key: "metadata"
  value {
    s: "\n\024TensorSliceDataset:0"
  }
}
attr {
  key: "output_shapes"
  value {
    list {
      shape {
        dim {
          size: 461
        }
        dim {
          size: 224
        }
        dim {
          size: 224
        }
        dim {
          size: 3
        }
      }
      shape {
      }
    }
  }
}
experimental_type {
  type_id: TFT_PRODUCT
  args {
    type_id: TFT_DATASET
    args {
      type_id: TFT_PRODUCT
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_UINT8
        }
      }
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_UINT8
        }
      }
    }
  }
  args {
    type_id: TFT_DATASET
    args {
      type_id: TFT_PRODUCT
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_UINT8
        }
      }
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_UINT8
        }
      }
    }
  }
}
Creating CNN Model on Each Active Replica (GPU)
Beginning Feature Extraction in GPU Mode...
2022-08-07 01:07:10.994663: W tensorflow/core/kernels/gpu_utils.cc:50] Failed to allocate memory for convolution redzone checking; skipping this check. This is benign and only means that we won't check cudnn for out-of-bounds reads and writes. This message will only be printed once.
2022-08-07 01:07:12.493005: I tensorflow/stream_executor/cuda/cuda_dnn.cc:379] Loaded cuDNN version 8400
2022-08-07 01:07:12.892318: I tensorflow/stream_executor/cuda/cuda_dnn.cc:379] Loaded cuDNN version 8400
2022-08-07 01:07:13.900569: W tensorflow/core/common_runtime/bfc_allocator.cc:343] Garbage collection: deallocate free memory regions (i.e., allocations) so that we can re-allocate a larger region to avoid OOM due to memory fragmentation. If you see this message frequently, you are running near the threshold of the available device memory and re-allocation may incur great performance overhead. You may try smaller batch sizes to observe the performance impact. Set TF_ENABLE_GPU_GARBAGE_COLLECTION=false if you'd like to disable this feature.
2022-08-07 01:07:14.448017: W tensorflow/core/common_runtime/bfc_allocator.cc:343] Garbage collection: deallocate free memory regions (i.e., allocations) so that we can re-allocate a larger region to avoid OOM due to memory fragmentation. If you see this message frequently, you are running near the threshold of the available device memory and re-allocation may incur great performance overhead. You may try smaller batch sizes to observe the performance impact. Set TF_ENABLE_GPU_GARBAGE_COLLECTION=false if you'd like to disable this feature.
Done getting video frame feature representations in 147.46260046958923 seconds.
Formatting Results into Numpy Arrays...
Setting TensorFlow Mirrored Strategy with 2 GPUs...
Number of devices in strategy: 2
Creating TF Dataset...
Creating TF DISTRIBUTED Dataset...
Creating CNN Model on Each Active Replica (GPU)
2022-08-07 01:09:33.217923: W tensorflow/core/grappler/optimizers/data/auto_shard.cc:776] AUTO sharding policy will apply DATA sharding policy as it failed to apply FILE sharding policy because of the following reason: Found an unshardable source dataset: name: "TensorSliceDataset/_2"
op: "TensorSliceDataset"
input: "Placeholder/_0"
input: "Placeholder/_1"
attr {
  key: "Toutput_types"
  value {
    list {
      type: DT_UINT8
      type: DT_UINT8
    }
  }
}
attr {
  key: "_cardinality"
  value {
    i: 59
  }
}
attr {
  key: "is_files"
  value {
    b: false
  }
}
attr {
  key: "metadata"
  value {
    s: "\n\024TensorSliceDataset:1"
  }
}
attr {
  key: "output_shapes"
  value {
    list {
      shape {
        dim {
          size: 461
        }
        dim {
          size: 224
        }
        dim {
          size: 224
        }
        dim {
          size: 3
        }
      }
      shape {
      }
    }
  }
}
experimental_type {
  type_id: TFT_PRODUCT
  args {
    type_id: TFT_DATASET
    args {
      type_id: TFT_PRODUCT
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_UINT8
        }
      }
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_UINT8
        }
      }
    }
  }
  args {
    type_id: TFT_DATASET
    args {
      type_id: TFT_PRODUCT
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_UINT8
        }
      }
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_UINT8
        }
      }
    }
  }
}
Beginning Feature Extraction in GPU Mode...
Done getting video frame feature representations in 36.33313012123108 seconds.
Formatting Results into Numpy Arrays...
Setting TensorFlow Mirrored Strategy with 2 GPUs...
Number of devices in strategy: 2
Creating TF Dataset...
Creating TF DISTRIBUTED Dataset...
Creating CNN Model on Each Active Replica (GPU)
Beginning Feature Extraction in GPU Mode...
2022-08-07 01:10:12.370651: W tensorflow/core/grappler/optimizers/data/auto_shard.cc:776] AUTO sharding policy will apply DATA sharding policy as it failed to apply FILE sharding policy because of the following reason: Found an unshardable source dataset: name: "TensorSliceDataset/_2"
op: "TensorSliceDataset"
input: "Placeholder/_0"
input: "Placeholder/_1"
attr {
  key: "Toutput_types"
  value {
    list {
      type: DT_UINT8
      type: DT_UINT8
    }
  }
}
attr {
  key: "_cardinality"
  value {
    i: 73
  }
}
attr {
  key: "is_files"
  value {
    b: false
  }
}
attr {
  key: "metadata"
  value {
    s: "\n\024TensorSliceDataset:2"
  }
}
attr {
  key: "output_shapes"
  value {
    list {
      shape {
        dim {
          size: 461
        }
        dim {
          size: 224
        }
        dim {
          size: 224
        }
        dim {
          size: 3
        }
      }
      shape {
      }
    }
  }
}
experimental_type {
  type_id: TFT_PRODUCT
  args {
    type_id: TFT_DATASET
    args {
      type_id: TFT_PRODUCT
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_UINT8
        }
      }
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_UINT8
        }
      }
    }
  }
  args {
    type_id: TFT_DATASET
    args {
      type_id: TFT_PRODUCT
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_UINT8
        }
      }
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_UINT8
        }
      }
    }
  }
}
Done getting video frame feature representations in 43.90806722640991 seconds.
Formatting Results into Numpy Arrays...
Back from feature Extraction.
Train Features: (232, 461, 512) || Train Labels: (232, 1)
Val Features: (59, 461, 512) || Val Labels: (59, 1)
Test Features: (73, 461, 512) || Test Labels: (73, 1)
Splitting + batching features and labels for RNN ...
Training RNN ...
Epoch 1/15

8/8 [==============================] - 12s 522ms/step - loss: 0.6928 - accuracy: 0.6336 - val_loss: 0.5470 - val_accuracy: 0.7627
Epoch 2/15
8/8 [==============================] - 1s 188ms/step - loss: 0.4667 - accuracy: 0.7759 - val_loss: 0.5549 - val_accuracy: 0.7119
Epoch 3/15
8/8 [==============================] - 2s 194ms/step - loss: 0.3308 - accuracy: 0.8405 - val_loss: 0.4477 - val_accuracy: 0.7966
Epoch 4/15
8/8 [==============================] - 1s 189ms/step - loss: 0.2026 - accuracy: 0.9310 - val_loss: 0.4671 - val_accuracy: 0.8136
Epoch 5/15
8/8 [==============================] - 1s 187ms/step - loss: 0.1188 - accuracy: 0.9655 - val_loss: 0.4845 - val_accuracy: 0.8136
Epoch 6/15
8/8 [==============================] - 1s 187ms/step - loss: 0.0621 - accuracy: 0.9784 - val_loss: 0.5701 - val_accuracy: 0.7797
Epoch 7/15
8/8 [==============================] - 2s 196ms/step - loss: 0.0264 - accuracy: 0.9914 - val_loss: 0.6225 - val_accuracy: 0.8305
Epoch 8/15
8/8 [==============================] - 1s 192ms/step - loss: 0.0142 - accuracy: 1.0000 - val_loss: 0.6125 - val_accuracy: 0.8475
Epoch 9/15
8/8 [==============================] - 1s 192ms/step - loss: 0.0450 - accuracy: 0.9784 - val_loss: 0.7422 - val_accuracy: 0.7797
Epoch 10/15
8/8 [==============================] - 1s 191ms/step - loss: 0.0458 - accuracy: 0.9871 - val_loss: 0.8914 - val_accuracy: 0.7288
Epoch 11/15
8/8 [==============================] - 1s 189ms/step - loss: 0.1866 - accuracy: 0.9310 - val_loss: 0.8351 - val_accuracy: 0.7797
Epoch 12/15
8/8 [==============================] - 1s 188ms/step - loss: 0.0450 - accuracy: 0.9914 - val_loss: 0.8985 - val_accuracy: 0.7966
Epoch 13/15
8/8 [==============================] - 2s 197ms/step - loss: 0.0260 - accuracy: 0.9914 - val_loss: 1.4515 - val_accuracy: 0.6441
3/3 [==============================] - 0s 49ms/step - loss: 0.9436 - accuracy: 0.7945
CNN      Accuracy (Test)    Loss (Test)    F1 Score    Time to Extract Features (sec)    Videos/Second (Feat. Ext.)    Frames/Second (Feat. Ext.)
-----  -----------------  -------------  ----------  --------------------------------  ----------------------------  ----------------------------
vgg19           0.794521       0.943557    0.805195                           183.796                       1.58328                       729.892