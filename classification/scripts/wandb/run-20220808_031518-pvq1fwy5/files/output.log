Memory growth is now the same across all 8 available GPUs.
Loading data...
Video 0 ...
Video 50 ...
Video 100 ...
Video 150 ...
Video 200 ...
Video 250 ...
Video 300 ...
Video 350 ...
Done loading videos in 92.55490827560425 seconds.
Splitting videos into train, val, and test...
2022-08-08 03:17:04.638894: I tensorflow/core/platform/cpu_feature_guard.cc:152] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  SSE3 SSE4.1 SSE4.2 AVX
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2022-08-08 03:17:11.158072: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1525] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 14649 MB memory:  -> device: 0, name: Tesla V100-SXM2-16GB-N, pci bus id: 0000:06:00.0, compute capability: 7.0
2022-08-08 03:17:11.160605: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1525] Created device /job:localhost/replica:0/task:0/device:GPU:1 with 14649 MB memory:  -> device: 1, name: Tesla V100-SXM2-16GB-N, pci bus id: 0000:07:00.0, compute capability: 7.0
2022-08-08 03:17:11.162965: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1525] Created device /job:localhost/replica:0/task:0/device:GPU:2 with 14649 MB memory:  -> device: 2, name: Tesla V100-SXM2-16GB-N, pci bus id: 0000:0a:00.0, compute capability: 7.0
2022-08-08 03:17:11.165323: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1525] Created device /job:localhost/replica:0/task:0/device:GPU:3 with 14649 MB memory:  -> device: 3, name: Tesla V100-SXM2-16GB-N, pci bus id: 0000:0b:00.0, compute capability: 7.0
2022-08-08 03:17:11.167680: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1525] Created device /job:localhost/replica:0/task:0/device:GPU:4 with 14649 MB memory:  -> device: 4, name: Tesla V100-SXM2-16GB-N, pci bus id: 0000:85:00.0, compute capability: 7.0
2022-08-08 03:17:11.170001: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1525] Created device /job:localhost/replica:0/task:0/device:GPU:5 with 14649 MB memory:  -> device: 5, name: Tesla V100-SXM2-16GB-N, pci bus id: 0000:86:00.0, compute capability: 7.0
2022-08-08 03:17:11.172309: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1525] Created device /job:localhost/replica:0/task:0/device:GPU:6 with 14649 MB memory:  -> device: 6, name: Tesla V100-SXM2-16GB-N, pci bus id: 0000:89:00.0, compute capability: 7.0
2022-08-08 03:17:11.174612: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1525] Created device /job:localhost/replica:0/task:0/device:GPU:7 with 14649 MB memory:  -> device: 7, name: Tesla V100-SXM2-16GB-N, pci bus id: 0000:8a:00.0, compute capability: 7.0
Done splitting.
Setting TensorFlow Mirrored Strategy with 4 GPUs...
Number of devices in strategy: 4
Creating TF Dataset...
Creating TF DISTRIBUTED Dataset...
Creating CNN Model on Each Active Replica (GPU)
2022-08-08 03:17:27.047028: W tensorflow/core/grappler/optimizers/data/auto_shard.cc:776] AUTO sharding policy will apply DATA sharding policy as it failed to apply FILE sharding policy because of the following reason: Found an unshardable source dataset: name: "TensorSliceDataset/_2"
op: "TensorSliceDataset"
input: "Placeholder/_0"
input: "Placeholder/_1"
attr {
  key: "Toutput_types"
  value {
    list {
      type: DT_UINT8
      type: DT_UINT8
    }
  }
}
attr {
  key: "_cardinality"
  value {
    i: 232
  }
}
attr {
  key: "is_files"
  value {
    b: false
  }
}
attr {
  key: "metadata"
  value {
    s: "\n\024TensorSliceDataset:0"
  }
}
attr {
  key: "output_shapes"
  value {
    list {
      shape {
        dim {
          size: 461
        }
        dim {
          size: 224
        }
        dim {
          size: 224
        }
        dim {
          size: 3
        }
      }
      shape {
      }
    }
  }
}
experimental_type {
  type_id: TFT_PRODUCT
  args {
    type_id: TFT_DATASET
    args {
      type_id: TFT_PRODUCT
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_UINT8
        }
      }
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_UINT8
        }
      }
    }
  }
  args {
    type_id: TFT_DATASET
    args {
      type_id: TFT_PRODUCT
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_UINT8
        }
      }
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_UINT8
        }
      }
    }
  }
}
Beginning Feature Extraction in GPU Mode...
2022-08-08 03:18:01.573828: I tensorflow/stream_executor/cuda/cuda_dnn.cc:379] Loaded cuDNN version 8400
2022-08-08 03:18:02.397820: I tensorflow/stream_executor/cuda/cuda_dnn.cc:379] Loaded cuDNN version 8400
2022-08-08 03:18:03.412219: I tensorflow/stream_executor/cuda/cuda_dnn.cc:379] Loaded cuDNN version 8400
2022-08-08 03:18:03.954791: I tensorflow/stream_executor/cuda/cuda_dnn.cc:379] Loaded cuDNN version 8400
Done getting video frame feature representations in 77.16906690597534 seconds.
Formatting Results into Numpy Arrays...
Setting TensorFlow Mirrored Strategy with 4 GPUs...
Number of devices in strategy: 4
Creating TF Dataset...
Creating TF DISTRIBUTED Dataset...
Creating CNN Model on Each Active Replica (GPU)
2022-08-08 03:19:00.913918: W tensorflow/core/grappler/optimizers/data/auto_shard.cc:776] AUTO sharding policy will apply DATA sharding policy as it failed to apply FILE sharding policy because of the following reason: Found an unshardable source dataset: name: "TensorSliceDataset/_2"
op: "TensorSliceDataset"
input: "Placeholder/_0"
input: "Placeholder/_1"
attr {
  key: "Toutput_types"
  value {
    list {
      type: DT_UINT8
      type: DT_UINT8
    }
  }
}
attr {
  key: "_cardinality"
  value {
    i: 59
  }
}
attr {
  key: "is_files"
  value {
    b: false
  }
}
attr {
  key: "metadata"
  value {
    s: "\n\024TensorSliceDataset:1"
  }
}
attr {
  key: "output_shapes"
  value {
    list {
      shape {
        dim {
          size: 461
        }
        dim {
          size: 224
        }
        dim {
          size: 224
        }
        dim {
          size: 3
        }
      }
      shape {
      }
    }
  }
}
experimental_type {
  type_id: TFT_PRODUCT
  args {
    type_id: TFT_DATASET
    args {
      type_id: TFT_PRODUCT
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_UINT8
        }
      }
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_UINT8
        }
      }
    }
  }
  args {
    type_id: TFT_DATASET
    args {
      type_id: TFT_PRODUCT
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_UINT8
        }
      }
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_UINT8
        }
      }
    }
  }
}
Beginning Feature Extraction in GPU Mode...
Done getting video frame feature representations in 40.339794397354126 seconds.
Formatting Results into Numpy Arrays...
Setting TensorFlow Mirrored Strategy with 4 GPUs...
Number of devices in strategy: 4
Creating TF Dataset...
Creating TF DISTRIBUTED Dataset...
Creating CNN Model on Each Active Replica (GPU)
2022-08-08 03:19:56.658996: W tensorflow/core/grappler/optimizers/data/auto_shard.cc:776] AUTO sharding policy will apply DATA sharding policy as it failed to apply FILE sharding policy because of the following reason: Found an unshardable source dataset: name: "TensorSliceDataset/_2"
op: "TensorSliceDataset"
input: "Placeholder/_0"
input: "Placeholder/_1"
attr {
  key: "Toutput_types"
  value {
    list {
      type: DT_UINT8
      type: DT_UINT8
    }
  }
}
attr {
  key: "_cardinality"
  value {
    i: 73
  }
}
attr {
  key: "is_files"
  value {
    b: false
  }
}
attr {
  key: "metadata"
  value {
    s: "\n\024TensorSliceDataset:2"
  }
}
attr {
  key: "output_shapes"
  value {
    list {
      shape {
        dim {
          size: 461
        }
        dim {
          size: 224
        }
        dim {
          size: 224
        }
        dim {
          size: 3
        }
      }
      shape {
      }
    }
  }
}
experimental_type {
  type_id: TFT_PRODUCT
  args {
    type_id: TFT_DATASET
    args {
      type_id: TFT_PRODUCT
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_UINT8
        }
      }
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_UINT8
        }
      }
    }
  }
  args {
    type_id: TFT_DATASET
    args {
      type_id: TFT_PRODUCT
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_UINT8
        }
      }
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_UINT8
        }
      }
    }
  }
}
Beginning Feature Extraction in GPU Mode...
Done getting video frame feature representations in 36.57096791267395 seconds.
Formatting Results into Numpy Arrays...
Back from feature Extraction.
Train Features: (232, 461, 2048) || Train Labels: (232, 1)
Val Features: (59, 461, 2048) || Val Labels: (59, 1)
Test Features: (73, 461, 2048) || Test Labels: (73, 1)
Splitting + batching features and labels for RNN ...
Training RNN ...
Epoch 1/15
8/8 [==============================] - 13s 652ms/step - loss: 0.8171 - accuracy: 0.6034 - val_loss: 0.4920 - val_accuracy: 0.7966
Epoch 2/15

8/8 [==============================] - 3s 348ms/step - loss: 0.4962 - accuracy: 0.7802 - val_loss: 0.4472 - val_accuracy: 0.7966
Epoch 3/15

8/8 [==============================] - 3s 348ms/step - loss: 0.3796 - accuracy: 0.8319 - val_loss: 0.5844 - val_accuracy: 0.7966
Epoch 4/15

8/8 [==============================] - 3s 342ms/step - loss: 0.3234 - accuracy: 0.8707 - val_loss: 0.4713 - val_accuracy: 0.7966
Epoch 5/15

8/8 [==============================] - 3s 350ms/step - loss: 0.2559 - accuracy: 0.8836 - val_loss: 0.4832 - val_accuracy: 0.7966
Epoch 6/15

8/8 [==============================] - 3s 351ms/step - loss: 0.1783 - accuracy: 0.9181 - val_loss: 0.5166 - val_accuracy: 0.8136
Epoch 7/15
8/8 [==============================] - 3s 350ms/step - loss: 0.1352 - accuracy: 0.9397 - val_loss: 0.4897 - val_accuracy: 0.8475
Epoch 8/15
8/8 [==============================] - 3s 341ms/step - loss: 0.0966 - accuracy: 0.9612 - val_loss: 0.5910 - val_accuracy: 0.7966
Epoch 9/15

8/8 [==============================] - 3s 349ms/step - loss: 0.0560 - accuracy: 0.9871 - val_loss: 0.5698 - val_accuracy: 0.8305
Epoch 10/15

8/8 [==============================] - 3s 346ms/step - loss: 0.0486 - accuracy: 0.9828 - val_loss: 0.7639 - val_accuracy: 0.8136
Epoch 11/15

8/8 [==============================] - 3s 343ms/step - loss: 0.0277 - accuracy: 0.9828 - val_loss: 0.6876 - val_accuracy: 0.8305
Epoch 12/15
8/8 [==============================] - 3s 348ms/step - loss: 0.0116 - accuracy: 1.0000 - val_loss: 0.7012 - val_accuracy: 0.8475

3/3 [==============================] - 1s 84ms/step - loss: 0.5031 - accuracy: 0.7945
CNN          Accuracy (Test)    Loss (Test)    F1 Score    Time to Extract Features (sec)    Videos/Second (Feat. Ext.)    Frames/Second (Feat. Ext.)
---------  -----------------  -------------  ----------  --------------------------------  ----------------------------  ----------------------------
resnet101           0.794521       0.503129    0.805195                           117.509                       2.47641                       1141.62